{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Home This webstie contains documentation for Extiri API version 1.x. Attention Extiri API is currently in beta. There may be breaking changes between versions. Contact If you have any questions, contact Wiktor W\u00f3jcik at wiktor.wojcik@extiri.com or using other official channel. Access GraphQL You can send GrapQL request to https://extiri.com/graphql endpoint. You need to send them with content type header set to application/json . There is also a editor at https://extiri.com/graphiql which is also where documentation for GraphQL is. REST All of REST endpoints start with https://extiri.com/api/1/ . All endpoints requiring content support only JSON content type. When request fails, it usually returns a response of following form: { \"error\" : true , \"reason\" : \"This string contains reason for failure.\" } It contains error field always set to true, a reason field, containing string describing reason of error. Server Maximum request size is 100 MB. Server also supports gzip compression with maximum size of data 30 MB. Server also limits number of requests per second per client to 16.","title":"Home"},{"location":"#home","text":"This webstie contains documentation for Extiri API version 1.x. Attention Extiri API is currently in beta. There may be breaking changes between versions.","title":"Home"},{"location":"#contact","text":"If you have any questions, contact Wiktor W\u00f3jcik at wiktor.wojcik@extiri.com or using other official channel.","title":"Contact"},{"location":"#access","text":"","title":"Access"},{"location":"#graphql","text":"You can send GrapQL request to https://extiri.com/graphql endpoint. You need to send them with content type header set to application/json . There is also a editor at https://extiri.com/graphiql which is also where documentation for GraphQL is.","title":"GraphQL"},{"location":"#rest","text":"All of REST endpoints start with https://extiri.com/api/1/ . All endpoints requiring content support only JSON content type. When request fails, it usually returns a response of following form: { \"error\" : true , \"reason\" : \"This string contains reason for failure.\" } It contains error field always set to true, a reason field, containing string describing reason of error.","title":"REST"},{"location":"#server","text":"Maximum request size is 100 MB. Server also supports gzip compression with maximum size of data 30 MB. Server also limits number of requests per second per client to 16.","title":"Server"},{"location":"data/categories/","text":"Categories All snippets have one of those categories chosen. None UI Math Algorithms Collections Automations Debugging","title":"Categories"},{"location":"data/categories/#categories","text":"All snippets have one of those categories chosen. None UI Math Algorithms Collections Automations Debugging","title":"Categories"},{"location":"data/languages/","text":"Languages All snippets have one of those languages chosen. These are identifiers, so they are not human readable. They are the same as in CodeMirror 5. apl pgp asn cmake c c++ objective-c kotlin scala c# java cobol coffescript lisp css/scss django dart dockerfile erlang fortran go groovy haskell html http javascript typescript json ecma jinja lua markdown maths ntriples pascal perl php powershell properties protobuf python r ruby rust sass scheme shell sql sqlite sparql mysql latex swift text toml turtle vb vue xml yaml","title":"Languages"},{"location":"data/languages/#languages","text":"All snippets have one of those languages chosen. These are identifiers, so they are not human readable. They are the same as in CodeMirror 5. apl pgp asn cmake c c++ objective-c kotlin scala c# java cobol coffescript lisp css/scss django dart dockerfile erlang fortran go groovy haskell html http javascript typescript json ecma jinja lua markdown maths ntriples pascal perl php powershell properties protobuf python r ruby rust sass scheme shell sql sqlite sparql mysql latex swift text toml turtle vb vue xml yaml","title":"Languages"},{"location":"snippets/create_snippet/","text":"Create snippet https://extiri.com/api/1/snippets/create Method: POST This endpoint will create snippet with specified content. If server is set to hide new snippets, snippet's isHidden field will be set to true and will eventually checked and either approved or deleted, otherwise snippet is simply created. Parameters Headers Authorization header (required) - bearer authorization using session token, for example: Bearer 4FB7B11C-C8E6-487C-92D8-EFB0CCBAEA47 Body title - string containing title of snippet. description - string containing description of snippet. code - string containing code of snippet. category - string containing one of predefined categories for snippet. language - string containing language key for language of code. Success response id - id of snippet. title - string containing title of snippet. desc - string containing description of snippet. code - string containing code of snippet. category - string containing one of predefined categories for snippet. language - string containing language key for language of code. creationDate - string containing ISO-8601 encoded date of snippet creation. isHidden - bool informing whether snippet should be shown. Example Request: https://extiri.com/api/1/snippets/create Header Authorization: Bearer 4FB7B11C-C8E6-487C-92D8-EFB0CCBAEA47 Body { \"title\" : \"Lorem ipsum\" , \"language\" : \"swift\" , \"category\" : \"UI\" , \"description\" : \"Dolor sit amet.\" , \"code\" : \"print(\\\"Hello, world!\\\")\" } Response: { \"id\" : \"4FB7B11C-C8E6-487C-92D8-EFB0CCBAEA47\" , \"title\" : \"Lorem ipsum\" , \"language\" : \"swift\" , \"category\" : \"UI\" , \"desc\" : \"Dolor sit amet.\" , \"code\" : \"print(\\\"Hello, world!\\\")\" , \"creator\" : \"2AAA76CF-87D8-4446-83BF-C22B9AEF531F\" , \"creationDate\" : \"2022-03-20T16:29:46Z\" , \"isHidden\" : false }","title":"Create snippet"},{"location":"snippets/create_snippet/#create-snippet","text":"https://extiri.com/api/1/snippets/create Method: POST This endpoint will create snippet with specified content. If server is set to hide new snippets, snippet's isHidden field will be set to true and will eventually checked and either approved or deleted, otherwise snippet is simply created.","title":"Create snippet"},{"location":"snippets/create_snippet/#parameters","text":"","title":"Parameters"},{"location":"snippets/create_snippet/#headers","text":"Authorization header (required) - bearer authorization using session token, for example: Bearer 4FB7B11C-C8E6-487C-92D8-EFB0CCBAEA47","title":"Headers"},{"location":"snippets/create_snippet/#body","text":"title - string containing title of snippet. description - string containing description of snippet. code - string containing code of snippet. category - string containing one of predefined categories for snippet. language - string containing language key for language of code.","title":"Body"},{"location":"snippets/create_snippet/#success-response","text":"id - id of snippet. title - string containing title of snippet. desc - string containing description of snippet. code - string containing code of snippet. category - string containing one of predefined categories for snippet. language - string containing language key for language of code. creationDate - string containing ISO-8601 encoded date of snippet creation. isHidden - bool informing whether snippet should be shown.","title":"Success response"},{"location":"snippets/create_snippet/#example","text":"Request: https://extiri.com/api/1/snippets/create","title":"Example"},{"location":"snippets/create_snippet/#header","text":"Authorization: Bearer 4FB7B11C-C8E6-487C-92D8-EFB0CCBAEA47","title":"Header"},{"location":"snippets/create_snippet/#body_1","text":"{ \"title\" : \"Lorem ipsum\" , \"language\" : \"swift\" , \"category\" : \"UI\" , \"description\" : \"Dolor sit amet.\" , \"code\" : \"print(\\\"Hello, world!\\\")\" } Response: { \"id\" : \"4FB7B11C-C8E6-487C-92D8-EFB0CCBAEA47\" , \"title\" : \"Lorem ipsum\" , \"language\" : \"swift\" , \"category\" : \"UI\" , \"desc\" : \"Dolor sit amet.\" , \"code\" : \"print(\\\"Hello, world!\\\")\" , \"creator\" : \"2AAA76CF-87D8-4446-83BF-C22B9AEF531F\" , \"creationDate\" : \"2022-03-20T16:29:46Z\" , \"isHidden\" : false }","title":"Body"},{"location":"snippets/delete_snippet/","text":"Delete snippet https://extiri.com/api/1/snippets/delete/<snippets id> Method: DELETE This endpoint will delete snippet with specified id. Parameters snippets id (required) - id of snippet, for example: C05D571B-E7F0-486D-98C9-7EF369F43CB7 Headers Authorization header (required) - bearer authorization using session token, for example: Bearer 4FB7B11C-C8E6-487C-92D8-EFB0CCBAEA47 Success response Ok Example Request: https://extiri.com/api/1/snippets/delete/C05D571B-E7F0-486D-98C9-7EF369F43CB7 Header Authorization: Bearer 4FB7B11C-C8E6-487C-92D8-EFB0CCBAEA47 Response: Ok","title":"Delete snippet"},{"location":"snippets/delete_snippet/#delete-snippet","text":"https://extiri.com/api/1/snippets/delete/<snippets id> Method: DELETE This endpoint will delete snippet with specified id.","title":"Delete snippet"},{"location":"snippets/delete_snippet/#parameters","text":"snippets id (required) - id of snippet, for example: C05D571B-E7F0-486D-98C9-7EF369F43CB7","title":"Parameters"},{"location":"snippets/delete_snippet/#headers","text":"Authorization header (required) - bearer authorization using session token, for example: Bearer 4FB7B11C-C8E6-487C-92D8-EFB0CCBAEA47","title":"Headers"},{"location":"snippets/delete_snippet/#success-response","text":"Ok","title":"Success response"},{"location":"snippets/delete_snippet/#example","text":"Request: https://extiri.com/api/1/snippets/delete/C05D571B-E7F0-486D-98C9-7EF369F43CB7","title":"Example"},{"location":"snippets/delete_snippet/#header","text":"Authorization: Bearer 4FB7B11C-C8E6-487C-92D8-EFB0CCBAEA47 Response: Ok","title":"Header"},{"location":"snippets/get_snippet/","text":"Get snippet https://extiri.com/api/1/snippets/get/<snippet's id> Method: GET This endpoint will return snippet with specified id. Parameters snippet's id (required) - id of snippet, for example: C05D571B-E7F0-486D-98C9-7EF369F43CB7 Success response id - id of snippet. title - string containing title of snippet. desc - string containing description of snippet. code - string containing code of snippet. category - string containing one of predefined categories for snippet. language - string containing language key for language of code. creationDate - string containing ISO-8601 encoded date of snippet creation. isHidden - bool informing whether snippet should be shown. Example Request: https://extiri.com/api/1/snippets/get/C05D571B-E7F0-486D-98C9-7EF369F43CB7 Response: { \"desc\" : \"Loads website provided using URL. WebView loads a new website whenever URL is changed. Optional onLoadStart and onLoadFinish run when WebView starts loading website or finishes loading of website respectively. You can provide own WKWebView and then use it to control WebView (navigationDelegate will be replaced).\" , \"code\" : \"struct WebView: NSViewRepresentable {\\n\\t\\/\\/\\/ URL of current page. If changed, WebView will change into new URL.\\n\\t@Binding var url: URL\\n\\t\\n\\tprivate var onLoadStart: (WKWebView) -> ()\\n\\tprivate var onLoadFinish: (WKWebView) -> ()\\n\\t\\n\\tprivate var wkWebView: WKWebView\\n\\t\\n\\tinit(url: Binding<URL>, wkWebView: WKWebView = WKWebView(), onLoadStart: ((WKWebView) -> ())? = nil, onLoadFinish: ((WKWebView) -> ())? = nil) {\\n\\t\\tself.wkWebView = wkWebView\\n\\t\\t\\n\\t\\tself._url = url\\n\\t\\t\\n\\t\\tif let onLoadStart = onLoadStart {\\n\\t\\t\\tself.onLoadStart = onLoadStart\\n\\t\\t} else {\\n\\t\\t\\tself.onLoadStart = { _ in }\\n\\t\\t}\\n\\t\\t\\n\\t\\tif let onLoadFinish = onLoadFinish {\\n\\t\\t\\tself.onLoadFinish = onLoadFinish\\n\\t\\t} else {\\n\\t\\t\\tself.onLoadFinish = { _ in }\\n\\t\\t}\\n\\t}\\n\\t\\n\\tfunc makeNSView(context: Context) -> WKWebView {\\n\\t\\twkWebView.navigationDelegate = context.coordinator\\n\\t\\twkWebView.load(URLRequest(url: url))\\n\\t\\t\\n\\t\\treturn wkWebView\\n\\t}\\n\\t\\n\\tfunc updateNSView(_ nsView: WKWebView, context: Context) {\\n\\t\\tnsView.load(URLRequest(url: url))\\n\\t}\\n\\t\\n\\tfunc makeCoordinator() -> Coordinator {\\n\\t\\tCoordinator(onLoadStart: onLoadStart, onLoadFinish: onLoadFinish)\\n\\t}\\n\\t\\n\\tclass Coordinator: NSObject, WKNavigationDelegate {\\n\\t\\tlet onLoadStart: (WKWebView) -> ()\\n\\t\\tlet onLoadFinish: (WKWebView) -> ()\\n\\t\\t\\n\\t\\tinit(onLoadStart: @escaping (WKWebView) -> (), onLoadFinish: @escaping (WKWebView) -> ()) {\\n\\t\\t\\tself.onLoadStart = onLoadStart\\n\\t\\t\\tself.onLoadFinish = onLoadFinish\\n\\t\\t}\\n\\t\\t\\n\\t\\tfunc webView(_ webView: WKWebView, didCommit navigation: WKNavigation!) {\\n\\t\\t\\tonLoadStart(webView)\\n\\t\\t}\\n\\t\\t\\n\\t\\tfunc webView(_ webView: WKWebView, didFinish navigation: WKNavigation!) {\\n\\t\\t\\tonLoadFinish(webView)\\n\\t\\t}\\n\\t}\\n}\\n\" , \"id\" : \"32F585DE-C9F1-4A51-83F4-E3EA38D8CA3B\" , \"category\" : \"None\" , \"title\" : \"WKWebView swiftUI wrapper\" , \"language\" : \"swift\" , \"creationDate\" : \"2022-06-19T17:17:50Z\" , \"creator\" : \"2AAA76CF-87D8-4446-83BF-C22B9AEF531F\" , \"isHidden\" : false }","title":"Get snippet"},{"location":"snippets/get_snippet/#get-snippet","text":"https://extiri.com/api/1/snippets/get/<snippet's id> Method: GET This endpoint will return snippet with specified id.","title":"Get snippet"},{"location":"snippets/get_snippet/#parameters","text":"snippet's id (required) - id of snippet, for example: C05D571B-E7F0-486D-98C9-7EF369F43CB7","title":"Parameters"},{"location":"snippets/get_snippet/#success-response","text":"id - id of snippet. title - string containing title of snippet. desc - string containing description of snippet. code - string containing code of snippet. category - string containing one of predefined categories for snippet. language - string containing language key for language of code. creationDate - string containing ISO-8601 encoded date of snippet creation. isHidden - bool informing whether snippet should be shown.","title":"Success response"},{"location":"snippets/get_snippet/#example","text":"Request: https://extiri.com/api/1/snippets/get/C05D571B-E7F0-486D-98C9-7EF369F43CB7 Response: { \"desc\" : \"Loads website provided using URL. WebView loads a new website whenever URL is changed. Optional onLoadStart and onLoadFinish run when WebView starts loading website or finishes loading of website respectively. You can provide own WKWebView and then use it to control WebView (navigationDelegate will be replaced).\" , \"code\" : \"struct WebView: NSViewRepresentable {\\n\\t\\/\\/\\/ URL of current page. If changed, WebView will change into new URL.\\n\\t@Binding var url: URL\\n\\t\\n\\tprivate var onLoadStart: (WKWebView) -> ()\\n\\tprivate var onLoadFinish: (WKWebView) -> ()\\n\\t\\n\\tprivate var wkWebView: WKWebView\\n\\t\\n\\tinit(url: Binding<URL>, wkWebView: WKWebView = WKWebView(), onLoadStart: ((WKWebView) -> ())? = nil, onLoadFinish: ((WKWebView) -> ())? = nil) {\\n\\t\\tself.wkWebView = wkWebView\\n\\t\\t\\n\\t\\tself._url = url\\n\\t\\t\\n\\t\\tif let onLoadStart = onLoadStart {\\n\\t\\t\\tself.onLoadStart = onLoadStart\\n\\t\\t} else {\\n\\t\\t\\tself.onLoadStart = { _ in }\\n\\t\\t}\\n\\t\\t\\n\\t\\tif let onLoadFinish = onLoadFinish {\\n\\t\\t\\tself.onLoadFinish = onLoadFinish\\n\\t\\t} else {\\n\\t\\t\\tself.onLoadFinish = { _ in }\\n\\t\\t}\\n\\t}\\n\\t\\n\\tfunc makeNSView(context: Context) -> WKWebView {\\n\\t\\twkWebView.navigationDelegate = context.coordinator\\n\\t\\twkWebView.load(URLRequest(url: url))\\n\\t\\t\\n\\t\\treturn wkWebView\\n\\t}\\n\\t\\n\\tfunc updateNSView(_ nsView: WKWebView, context: Context) {\\n\\t\\tnsView.load(URLRequest(url: url))\\n\\t}\\n\\t\\n\\tfunc makeCoordinator() -> Coordinator {\\n\\t\\tCoordinator(onLoadStart: onLoadStart, onLoadFinish: onLoadFinish)\\n\\t}\\n\\t\\n\\tclass Coordinator: NSObject, WKNavigationDelegate {\\n\\t\\tlet onLoadStart: (WKWebView) -> ()\\n\\t\\tlet onLoadFinish: (WKWebView) -> ()\\n\\t\\t\\n\\t\\tinit(onLoadStart: @escaping (WKWebView) -> (), onLoadFinish: @escaping (WKWebView) -> ()) {\\n\\t\\t\\tself.onLoadStart = onLoadStart\\n\\t\\t\\tself.onLoadFinish = onLoadFinish\\n\\t\\t}\\n\\t\\t\\n\\t\\tfunc webView(_ webView: WKWebView, didCommit navigation: WKNavigation!) {\\n\\t\\t\\tonLoadStart(webView)\\n\\t\\t}\\n\\t\\t\\n\\t\\tfunc webView(_ webView: WKWebView, didFinish navigation: WKNavigation!) {\\n\\t\\t\\tonLoadFinish(webView)\\n\\t\\t}\\n\\t}\\n}\\n\" , \"id\" : \"32F585DE-C9F1-4A51-83F4-E3EA38D8CA3B\" , \"category\" : \"None\" , \"title\" : \"WKWebView swiftUI wrapper\" , \"language\" : \"swift\" , \"creationDate\" : \"2022-06-19T17:17:50Z\" , \"creator\" : \"2AAA76CF-87D8-4446-83BF-C22B9AEF531F\" , \"isHidden\" : false }","title":"Example"},{"location":"snippets/get_snippets/","text":"Get snippets https://extiri.com/api/1/snippets/?page=<page>&query=<search text>&language=<language>&creator=<creator's id> Method: GET This endpoint will return snippets filtered with specified options. Parameters page (optional, default: 1) - integer from 1 to unspecified number; you can get number of all pages by dividing total number of snippets by 20 (number of snippets on one page). query (optional, default: none) - server will return snippets which codes, titles or descriptions contain specified query. If absent, returns all snippets. language (optional, default: none) - server will return snippets with specified language key. If absent, returns all snippets. creator (optional, default: none) - server will return snippets created by specified creator. It is a identifier of creators account. If absent, returns all snippets. Success response totalNumberOfResults - integer containing number of all snippets in database. page metadata page - number of current page. total - total number of results on current page. per - number of snippets per page. items - array of snippets. id - id of snippet. title - string containing title of snippet. desc - string containing description of snippet. code - string containing code of snippet. category - string containing one of predefined categories for snippet. language - string containing language key for language of code. creationDate - string containing ISO-8601 encoded date of snippet creation. isHidden - bool informing whether snippet should be shown. Example Request: https://extiri.com/api/1/snippets?language=swift&page=1 Response: { \"totalNumberOfResults\" : 4 , \"page\" : { \"items\" : [ { \"category\" : \"None\" , \"desc\" : \"Loads website provided using URL. WebView loads a new website whenever URL is changed. Optional onLoadStart and onLoadFinish run when WebView starts loading website or finishes loading of website respectively. You can provide own WKWebView and then use it to control WebView (navigationDelegate will be replaced).\" , \"language\" : \"swift\" , \"creator\" : \"2AAA76CF-87D8-4446-83BF-C22B9AEF531F\" , \"code\" : \"struct WebView: NSViewRepresentable {\\n\\t\\/\\/\\/ URL of current page. If changed, WebView will change into new URL.\\n\\t@Binding var url: URL\\n\\t\\n\\tprivate var onLoadStart: (WKWebView) -> ()\\n\\tprivate var onLoadFinish: (WKWebView) -> ()\\n\\t\\n\\tprivate var wkWebView: WKWebView\\n\\t\\n\\tinit(url: Binding<URL>, wkWebView: WKWebView = WKWebView(), onLoadStart: ((WKWebView) -> ())? = nil, onLoadFinish: ((WKWebView) -> ())? = nil) {\\n\\t\\tself.wkWebView = wkWebView\\n\\t\\t\\n\\t\\tself._url = url\\n\\t\\t\\n\\t\\tif let onLoadStart = onLoadStart {\\n\\t\\t\\tself.onLoadStart = onLoadStart\\n\\t\\t} else {\\n\\t\\t\\tself.onLoadStart = { _ in }\\n\\t\\t}\\n\\t\\t\\n\\t\\tif let onLoadFinish = onLoadFinish {\\n\\t\\t\\tself.onLoadFinish = onLoadFinish\\n\\t\\t} else {\\n\\t\\t\\tself.onLoadFinish = { _ in }\\n\\t\\t}\\n\\t}\\n\\t\\n\\tfunc makeNSView(context: Context) -> WKWebView {\\n\\t\\twkWebView.navigationDelegate = context.coordinator\\n\\t\\twkWebView.load(URLRequest(url: url))\\n\\t\\t\\n\\t\\treturn wkWebView\\n\\t}\\n\\t\\n\\tfunc updateNSView(_ nsView: WKWebView, context: Context) {\\n\\t\\tnsView.load(URLRequest(url: url))\\n\\t}\\n\\t\\n\\tfunc makeCoordinator() -> Coordinator {\\n\\t\\tCoordinator(onLoadStart: onLoadStart, onLoadFinish: onLoadFinish)\\n\\t}\\n\\t\\n\\tclass Coordinator: NSObject, WKNavigationDelegate {\\n\\t\\tlet onLoadStart: (WKWebView) -> ()\\n\\t\\tlet onLoadFinish: (WKWebView) -> ()\\n\\t\\t\\n\\t\\tinit(onLoadStart: @escaping (WKWebView) -> (), onLoadFinish: @escaping (WKWebView) -> ()) {\\n\\t\\t\\tself.onLoadStart = onLoadStart\\n\\t\\t\\tself.onLoadFinish = onLoadFinish\\n\\t\\t}\\n\\t\\t\\n\\t\\tfunc webView(_ webView: WKWebView, didCommit navigation: WKNavigation!) {\\n\\t\\t\\tonLoadStart(webView)\\n\\t\\t}\\n\\t\\t\\n\\t\\tfunc webView(_ webView: WKWebView, didFinish navigation: WKNavigation!) {\\n\\t\\t\\tonLoadFinish(webView)\\n\\t\\t}\\n\\t}\\n}\\n\" , \"isHidden\" : false , \"creationDate\" : \"2022-06-19T17:17:50Z\" , \"id\" : \"32F585DE-C9F1-4A51-83F4-E3EA38D8CA3B\" , \"title\" : \"WKWebView swiftUI wrapper\" }, { \"category\" : \"None\" , \"desc\" : \"URLSession wrapper for JavaScriptCore. Apply using jsContext.setObject(JSHTTPRequest.self, forKeyedSubscript: \\\"HTTPRequest\\\" as NSString).\" , \"language\" : \"swift\" , \"creator\" : \"2AAA76CF-87D8-4446-83BF-C22B9AEF531F\" , \"code\" : \"import Foundation\\nimport JavaScriptCore\\n\\n@objc protocol JSHTTPRequestProtocol: JSExport {\\n\\tvar url: String { get set }\\n\\tvar method: String { get set }\\n\\tvar requestHeaders: [String: String] { get set }\\n\\t\\n\\tfunc setRequestHeader(_ key: String, _ value: String)\\n\\tfunc send(_ completionHandler: JSValue)\\n\\tstatic func `open`(_ url: String, _ method: String) -> JSHTTPRequest\\n}\\n\\n@objc class JSHTTPRequest: NSObject, JSHTTPRequestProtocol {\\n\\tvar url: String\\n\\tvar method: String\\n\\tvar requestHeaders: [String : String] = [:]\\n\\t\\n\\tfunc setRequestHeader(_ key: String, _ value: String) {\\n\\t\\trequestHeaders[key] = value\\n\\t}\\n\\t\\n\\tfunc send(_ completionHandler: JSValue) {\\n\\t\\tif let url = URL(string: url) {\\n\\t\\t\\tvar request = URLRequest(url: url)\\n\\t\\t\\t\\n\\t\\t\\trequest.httpMethod = method\\n\\t\\t\\t\\n\\t\\t\\tfor (key, value) in requestHeaders {\\n\\t\\t\\t\\trequest.setValue(value, forHTTPHeaderField: key)\\n\\t\\t\\t}\\n\\t\\t\\t\\n\\t\\t\\tlet task = URLSession.shared.dataTask(with: request) { data, response, error in\\n\\t\\t\\t\\tif let error = error {\\n\\t\\t\\t\\t\\tAsyncMain {\\n\\t\\t\\t\\t\\t\\tcompletionHandler.call(withArguments: [[\\\"statusCode\\\": 1, \\\"error\\\": error.localizedDescription]])\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\tif let data = String(data: data!, encoding: .utf8) {\\n\\t\\t\\t\\t\\t\\tAsyncMain {\\n\\t\\t\\t\\t\\t\\t\\tcompletionHandler.call(withArguments: [[\\\"statusCode\\\": 0, \\\"data\\\": data]])\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\tAsyncMain {\\n\\t\\t\\t\\t\\t\\t\\tcompletionHandler.call(withArguments: [[\\\"statusCode\\\": 1, \\\"error\\\": \\\"Can't generate string, because encoding is probably different than UTF-8.\\\"]])\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t\\t\\n\\t\\t\\ttask.resume()\\n\\t\\t} else {\\n\\t\\t\\tcompletionHandler.call(withArguments: [[\\\"statusCode\\\": 1,\\\"error\\\": \\\"Provided URL is not valid.\\\"]])\\n\\t\\t}\\n\\t}\\n\\t\\n\\tclass func `open`(_ url: String, _ method: String) -> JSHTTPRequest {\\n\\t\\treturn .init(url: url, method: method)\\n\\t}\\n\\t\\n\\trequired init(url: String, method: String) {\\n\\t\\tself.url = url\\n\\t\\tself.method = method\\n\\t}\\n}\\n\" , \"isHidden\" : false , \"creationDate\" : \"2022-06-19T15:20:00Z\" , \"id\" : \"8FEAE0E7-46AA-4785-9C4C-9889F1D64150\" , \"title\" : \"HTTP request\" }, { \"category\" : \"None\" , \"desc\" : \"A class for converting numbers between hexadecimal, decimal and binary.\" , \"language\" : \"swift\" , \"creator\" : \"2AAA76CF-87D8-4446-83BF-C22B9AEF531F\" , \"code\" : \"class ConvertersManager {\\n\\tenum NumberType: String, CaseIterable {\\n\\t\\tcase hexadecimal\\n\\t\\tcase binary\\n\\t\\tcase decimal\\n\\t}\\n\\t\\n\\tenum ConvertingError: Error {\\n\\t\\tcase numberIsNotOfSpecifiedType\\n\\t\\t\\n\\t\\tvar localizedDescription: String {\\n\\t\\t\\tswitch self {\\n\\t\\t\\t\\tcase .numberIsNotOfSpecifiedType:\\n\\t\\t\\t\\t\\treturn \\\"Provided number is not a number of specified type.\\\"\\n\\t\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\t\\n\\tprivate func isNumber(_ number: String, type: NumberType) -> Bool {\\n\\t\\tvar digits = \\\"\\\"\\n\\t\\t\\n\\t\\tswitch type {\\n\\t\\t\\tcase .hexadecimal:\\n\\t\\t\\t\\tdigits = \\\"0123456789ABCDEF\\\"\\n\\t\\t\\tcase .binary:\\n\\t\\t\\t\\tdigits = \\\"01\\\"\\n\\t\\t\\tcase .decimal:\\n\\t\\t\\t\\tdigits = \\\"0123456789\\\"\\n\\t\\t}\\n\\t\\t\\n\\t\\tfor digit in number {\\n\\t\\t\\tif !digits.contains(digit) {\\n\\t\\t\\t\\treturn false\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\\t\\n\\t\\treturn true\\n\\t}\\n\\t\\n\\tprivate func toBinary(number: String, ofType type: NumberType) -> String {\\n\\t\\tswitch type {\\n\\t\\t\\tcase .hexadecimal:\\n\\t\\t\\t\\tvar result = \\\"\\\"\\n\\t\\t\\t\\t\\n\\t\\t\\t\\tfor digit in number {\\n\\t\\t\\t\\t\\tresult.append(hexadecimalDigitToBinaryNumber(digit: String(digit)))\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\n\\t\\t\\t\\treturn result\\n\\t\\t\\tcase .binary:\\n\\t\\t\\t\\treturn number\\n\\t\\t\\tcase .decimal:\\n\\t\\t\\t\\treturn String(Int(number)!, radix: 2)\\n\\t\\t}\\n\\t}\\n\\t\\n\\tprivate func toDecimal(number: String, ofType type: NumberType) -> String {\\n\\t\\tswitch type {\\n\\t\\t\\tcase .hexadecimal:\\n\\t\\t\\t\\treturn String(Int(toBinary(number: number, ofType: type), radix: 2)!)\\n\\t\\t\\tcase .binary:\\n\\t\\t\\t\\treturn String(Int(number, radix: 2)!)\\n\\t\\t\\tcase .decimal:\\n\\t\\t\\t\\treturn number\\n\\t\\t}\\n\\t}\\n\\t\\n\\tprivate func toHexadecimal(number: String, ofType type: NumberType) -> String {\\n\\t\\tswitch type {\\n\\t\\t\\tcase .hexadecimal:\\n\\t\\t\\t\\treturn number\\n\\t\\t\\tcase .binary:\\n\\t\\t\\t\\treturn String(fillMissingZerosForHexadecimalInBinary(string: number)).split(by: 4).map {\\n\\t\\t\\t\\t\\tbinaryNumberToHexadecimalDigit(digit: $0)\\n\\t\\t\\t\\t}.joined()\\n\\t\\t\\tcase .decimal:\\n\\t\\t\\t\\treturn String(fillMissingZerosForHexadecimalInBinary(string: String(Int(number)!, radix: 2))).split(by: 4).map {\\n\\t\\t\\t\\t\\tbinaryNumberToHexadecimalDigit(digit: $0)\\n\\t\\t\\t\\t}.joined()\\n\\t\\t}\\n\\t}\\n\\t\\n\\t\\/**\\n\\t Converts provided number to number of other type.\\n\\t \\n\\t - Parameter number: The number that will be converted.\\n\\t - Parameter ofType: The type of the number, which is going to be converted.\\n\\t - Parameter toType: The type to which number will be converted.\\n\\t \\n\\t - Returns: A hexadecimal number.\\n\\t *\\/\\n\\tfunc convert(number: String, ofType typeOfNumber: NumberType, toType resultType: NumberType) throws -> String {\\n\\t\\tif !isNumber(number, type: typeOfNumber) {\\n\\t\\t\\tthrow ConvertingError.numberIsNotOfSpecifiedType\\t\\t}\\n\\t\\t\\n\\t\\tswitch resultType {\\n\\t\\t\\tcase .hexadecimal:\\n\\t\\t\\t\\treturn toHexadecimal(number: number, ofType: typeOfNumber)\\n\\t\\t\\tcase .binary:\\n\\t\\t\\t\\treturn toBinary(number: number, ofType: typeOfNumber)\\n\\t\\t\\tcase .decimal:\\n\\t\\t\\t\\treturn toDecimal(number: number, ofType: typeOfNumber)\\n\\t\\t}\\n\\t}\\n\\n\\tprivate func fillMissingZerosForHexadecimalInBinary(string: String) -> String {\\n\\t\\tif string.count % 4 == 0 {\\n\\t\\t\\treturn string\\n\\t\\t} else {\\n\\t\\t\\tvar result = string\\n\\t\\t\\tvar count = string.count\\n\\t\\t\\t\\n\\t\\t\\twhile count % 4 != 0 {\\n\\t\\t\\t\\tresult = \\\"0\\\" + result\\n\\t\\t\\t\\tcount += 1\\n\\t\\t\\t}\\n\\t\\t\\t\\n\\t\\t\\treturn result\\n\\t\\t}\\n\\t}\\n\\t\\n\\tprivate func hexadecimalDigitToBinaryNumber(digit: String) -> String {\\n\\t\\tswitch digit {\\n\\t\\t\\tcase \\\"0\\\":\\n\\t\\t\\t\\treturn \\\"0000\\\"\\n\\t\\t\\tcase \\\"1\\\":\\n\\t\\t\\t\\treturn \\\"0001\\\"\\n\\t\\t\\tcase \\\"2\\\":\\n\\t\\t\\t\\treturn \\\"0010\\\"\\n\\t\\t\\tcase \\\"3\\\":\\n\\t\\t\\t\\treturn \\\"0011\\\"\\n\\t\\t\\tcase \\\"4\\\":\\n\\t\\t\\t\\treturn \\\"0100\\\"\\n\\t\\t\\tcase \\\"5\\\":\\n\\t\\t\\t\\treturn \\\"0101\\\"\\n\\t\\t\\tcase \\\"6\\\":\\n\\t\\t\\t\\treturn \\\"0110\\\"\\n\\t\\t\\tcase \\\"7\\\":\\n\\t\\t\\t\\treturn \\\"0111\\\"\\n\\t\\t\\tcase \\\"8\\\":\\n\\t\\t\\t\\treturn \\\"1000\\\"\\n\\t\\t\\tcase \\\"9\\\":\\n\\t\\t\\t\\treturn \\\"1001\\\"\\n\\t\\t\\tcase \\\"A\\\":\\n\\t\\t\\t\\treturn \\\"1010\\\"\\n\\t\\t\\tcase \\\"B\\\":\\n\\t\\t\\t\\treturn \\\"1011\\\"\\n\\t\\t\\tcase \\\"C\\\":\\n\\t\\t\\t\\treturn \\\"1100\\\"\\n\\t\\t\\tcase \\\"D\\\":\\n\\t\\t\\t\\treturn \\\"1101\\\"\\n\\t\\t\\tcase \\\"E\\\":\\n\\t\\t\\t\\treturn \\\"1110\\\"\\n\\t\\t\\tcase \\\"F\\\":\\n\\t\\t\\t\\treturn \\\"1111\\\"\\n\\t\\t\\tdefault:\\n\\t\\t\\t\\t\\/\\/ Impossible to reach.\\n\\t\\t\\t\\treturn \\\"Error: Invalid digit.\\\"\\n\\t\\t}\\n\\t}\\n\\t\\n\\tprivate func binaryNumberToHexadecimalDigit(digit: String) -> String {\\n\\t\\tswitch digit {\\n\\t\\t\\tcase \\\"0000\\\":\\n\\t\\t\\t\\treturn \\\"0\\\"\\n\\t\\t\\tcase \\\"0001\\\":\\n\\t\\t\\t\\treturn \\\"1\\\"\\n\\t\\t\\tcase \\\"0010\\\":\\n\\t\\t\\t\\treturn \\\"2\\\"\\n\\t\\t\\tcase \\\"0011\\\":\\n\\t\\t\\t\\treturn \\\"3\\\"\\n\\t\\t\\tcase \\\"0100\\\":\\n\\t\\t\\t\\treturn \\\"4\\\"\\n\\t\\t\\tcase \\\"0101\\\":\\n\\t\\t\\t\\treturn \\\"5\\\"\\n\\t\\t\\tcase \\\"0110\\\":\\n\\t\\t\\t\\treturn \\\"6\\\"\\n\\t\\t\\tcase \\\"0111\\\":\\n\\t\\t\\t\\treturn \\\"7\\\"\\n\\t\\t\\tcase \\\"1000\\\":\\n\\t\\t\\t\\treturn \\\"8\\\"\\n\\t\\t\\tcase \\\"1001\\\":\\n\\t\\t\\t\\treturn \\\"9\\\"\\n\\t\\t\\tcase \\\"1010\\\":\\n\\t\\t\\t\\treturn \\\"A\\\"\\n\\t\\t\\tcase \\\"1011\\\":\\n\\t\\t\\t\\treturn \\\"B\\\"\\n\\t\\t\\tcase \\\"1100\\\":\\n\\t\\t\\t\\treturn \\\"C\\\"\\n\\t\\t\\tcase \\\"1101\\\":\\n\\t\\t\\t\\treturn \\\"D\\\"\\n\\t\\t\\tcase \\\"1110\\\":\\n\\t\\t\\t\\treturn \\\"E\\\"\\n\\t\\t\\tcase \\\"1111\\\":\\n\\t\\t\\t\\treturn \\\"F\\\"\\n\\t\\t\\tdefault:\\n\\t\\t\\t\\t\\/\\/ Impossible to reach.\\n\\t\\t\\t\\treturn \\\"Error: Invalid digit.\\\"\\n\\t\\t}\\n\\t}\\n}\" , \"isHidden\" : false , \"creationDate\" : \"2022-06-19T15:11:21Z\" , \"id\" : \"7AE81089-EF1C-465F-9C39-25115DCED320\" , \"title\" : \"Number converter\" } ], \"metadata\" : { \"page\" : 1 , \"total\" : 3 , \"per\" : 20 } } }","title":"Get snippets"},{"location":"snippets/get_snippets/#get-snippets","text":"https://extiri.com/api/1/snippets/?page=<page>&query=<search text>&language=<language>&creator=<creator's id> Method: GET This endpoint will return snippets filtered with specified options.","title":"Get snippets"},{"location":"snippets/get_snippets/#parameters","text":"page (optional, default: 1) - integer from 1 to unspecified number; you can get number of all pages by dividing total number of snippets by 20 (number of snippets on one page). query (optional, default: none) - server will return snippets which codes, titles or descriptions contain specified query. If absent, returns all snippets. language (optional, default: none) - server will return snippets with specified language key. If absent, returns all snippets. creator (optional, default: none) - server will return snippets created by specified creator. It is a identifier of creators account. If absent, returns all snippets.","title":"Parameters"},{"location":"snippets/get_snippets/#success-response","text":"totalNumberOfResults - integer containing number of all snippets in database. page metadata page - number of current page. total - total number of results on current page. per - number of snippets per page. items - array of snippets. id - id of snippet. title - string containing title of snippet. desc - string containing description of snippet. code - string containing code of snippet. category - string containing one of predefined categories for snippet. language - string containing language key for language of code. creationDate - string containing ISO-8601 encoded date of snippet creation. isHidden - bool informing whether snippet should be shown.","title":"Success response"},{"location":"snippets/get_snippets/#example","text":"Request: https://extiri.com/api/1/snippets?language=swift&page=1 Response: { \"totalNumberOfResults\" : 4 , \"page\" : { \"items\" : [ { \"category\" : \"None\" , \"desc\" : \"Loads website provided using URL. WebView loads a new website whenever URL is changed. Optional onLoadStart and onLoadFinish run when WebView starts loading website or finishes loading of website respectively. You can provide own WKWebView and then use it to control WebView (navigationDelegate will be replaced).\" , \"language\" : \"swift\" , \"creator\" : \"2AAA76CF-87D8-4446-83BF-C22B9AEF531F\" , \"code\" : \"struct WebView: NSViewRepresentable {\\n\\t\\/\\/\\/ URL of current page. If changed, WebView will change into new URL.\\n\\t@Binding var url: URL\\n\\t\\n\\tprivate var onLoadStart: (WKWebView) -> ()\\n\\tprivate var onLoadFinish: (WKWebView) -> ()\\n\\t\\n\\tprivate var wkWebView: WKWebView\\n\\t\\n\\tinit(url: Binding<URL>, wkWebView: WKWebView = WKWebView(), onLoadStart: ((WKWebView) -> ())? = nil, onLoadFinish: ((WKWebView) -> ())? = nil) {\\n\\t\\tself.wkWebView = wkWebView\\n\\t\\t\\n\\t\\tself._url = url\\n\\t\\t\\n\\t\\tif let onLoadStart = onLoadStart {\\n\\t\\t\\tself.onLoadStart = onLoadStart\\n\\t\\t} else {\\n\\t\\t\\tself.onLoadStart = { _ in }\\n\\t\\t}\\n\\t\\t\\n\\t\\tif let onLoadFinish = onLoadFinish {\\n\\t\\t\\tself.onLoadFinish = onLoadFinish\\n\\t\\t} else {\\n\\t\\t\\tself.onLoadFinish = { _ in }\\n\\t\\t}\\n\\t}\\n\\t\\n\\tfunc makeNSView(context: Context) -> WKWebView {\\n\\t\\twkWebView.navigationDelegate = context.coordinator\\n\\t\\twkWebView.load(URLRequest(url: url))\\n\\t\\t\\n\\t\\treturn wkWebView\\n\\t}\\n\\t\\n\\tfunc updateNSView(_ nsView: WKWebView, context: Context) {\\n\\t\\tnsView.load(URLRequest(url: url))\\n\\t}\\n\\t\\n\\tfunc makeCoordinator() -> Coordinator {\\n\\t\\tCoordinator(onLoadStart: onLoadStart, onLoadFinish: onLoadFinish)\\n\\t}\\n\\t\\n\\tclass Coordinator: NSObject, WKNavigationDelegate {\\n\\t\\tlet onLoadStart: (WKWebView) -> ()\\n\\t\\tlet onLoadFinish: (WKWebView) -> ()\\n\\t\\t\\n\\t\\tinit(onLoadStart: @escaping (WKWebView) -> (), onLoadFinish: @escaping (WKWebView) -> ()) {\\n\\t\\t\\tself.onLoadStart = onLoadStart\\n\\t\\t\\tself.onLoadFinish = onLoadFinish\\n\\t\\t}\\n\\t\\t\\n\\t\\tfunc webView(_ webView: WKWebView, didCommit navigation: WKNavigation!) {\\n\\t\\t\\tonLoadStart(webView)\\n\\t\\t}\\n\\t\\t\\n\\t\\tfunc webView(_ webView: WKWebView, didFinish navigation: WKNavigation!) {\\n\\t\\t\\tonLoadFinish(webView)\\n\\t\\t}\\n\\t}\\n}\\n\" , \"isHidden\" : false , \"creationDate\" : \"2022-06-19T17:17:50Z\" , \"id\" : \"32F585DE-C9F1-4A51-83F4-E3EA38D8CA3B\" , \"title\" : \"WKWebView swiftUI wrapper\" }, { \"category\" : \"None\" , \"desc\" : \"URLSession wrapper for JavaScriptCore. Apply using jsContext.setObject(JSHTTPRequest.self, forKeyedSubscript: \\\"HTTPRequest\\\" as NSString).\" , \"language\" : \"swift\" , \"creator\" : \"2AAA76CF-87D8-4446-83BF-C22B9AEF531F\" , \"code\" : \"import Foundation\\nimport JavaScriptCore\\n\\n@objc protocol JSHTTPRequestProtocol: JSExport {\\n\\tvar url: String { get set }\\n\\tvar method: String { get set }\\n\\tvar requestHeaders: [String: String] { get set }\\n\\t\\n\\tfunc setRequestHeader(_ key: String, _ value: String)\\n\\tfunc send(_ completionHandler: JSValue)\\n\\tstatic func `open`(_ url: String, _ method: String) -> JSHTTPRequest\\n}\\n\\n@objc class JSHTTPRequest: NSObject, JSHTTPRequestProtocol {\\n\\tvar url: String\\n\\tvar method: String\\n\\tvar requestHeaders: [String : String] = [:]\\n\\t\\n\\tfunc setRequestHeader(_ key: String, _ value: String) {\\n\\t\\trequestHeaders[key] = value\\n\\t}\\n\\t\\n\\tfunc send(_ completionHandler: JSValue) {\\n\\t\\tif let url = URL(string: url) {\\n\\t\\t\\tvar request = URLRequest(url: url)\\n\\t\\t\\t\\n\\t\\t\\trequest.httpMethod = method\\n\\t\\t\\t\\n\\t\\t\\tfor (key, value) in requestHeaders {\\n\\t\\t\\t\\trequest.setValue(value, forHTTPHeaderField: key)\\n\\t\\t\\t}\\n\\t\\t\\t\\n\\t\\t\\tlet task = URLSession.shared.dataTask(with: request) { data, response, error in\\n\\t\\t\\t\\tif let error = error {\\n\\t\\t\\t\\t\\tAsyncMain {\\n\\t\\t\\t\\t\\t\\tcompletionHandler.call(withArguments: [[\\\"statusCode\\\": 1, \\\"error\\\": error.localizedDescription]])\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\tif let data = String(data: data!, encoding: .utf8) {\\n\\t\\t\\t\\t\\t\\tAsyncMain {\\n\\t\\t\\t\\t\\t\\t\\tcompletionHandler.call(withArguments: [[\\\"statusCode\\\": 0, \\\"data\\\": data]])\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\tAsyncMain {\\n\\t\\t\\t\\t\\t\\t\\tcompletionHandler.call(withArguments: [[\\\"statusCode\\\": 1, \\\"error\\\": \\\"Can't generate string, because encoding is probably different than UTF-8.\\\"]])\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t\\t\\n\\t\\t\\ttask.resume()\\n\\t\\t} else {\\n\\t\\t\\tcompletionHandler.call(withArguments: [[\\\"statusCode\\\": 1,\\\"error\\\": \\\"Provided URL is not valid.\\\"]])\\n\\t\\t}\\n\\t}\\n\\t\\n\\tclass func `open`(_ url: String, _ method: String) -> JSHTTPRequest {\\n\\t\\treturn .init(url: url, method: method)\\n\\t}\\n\\t\\n\\trequired init(url: String, method: String) {\\n\\t\\tself.url = url\\n\\t\\tself.method = method\\n\\t}\\n}\\n\" , \"isHidden\" : false , \"creationDate\" : \"2022-06-19T15:20:00Z\" , \"id\" : \"8FEAE0E7-46AA-4785-9C4C-9889F1D64150\" , \"title\" : \"HTTP request\" }, { \"category\" : \"None\" , \"desc\" : \"A class for converting numbers between hexadecimal, decimal and binary.\" , \"language\" : \"swift\" , \"creator\" : \"2AAA76CF-87D8-4446-83BF-C22B9AEF531F\" , \"code\" : \"class ConvertersManager {\\n\\tenum NumberType: String, CaseIterable {\\n\\t\\tcase hexadecimal\\n\\t\\tcase binary\\n\\t\\tcase decimal\\n\\t}\\n\\t\\n\\tenum ConvertingError: Error {\\n\\t\\tcase numberIsNotOfSpecifiedType\\n\\t\\t\\n\\t\\tvar localizedDescription: String {\\n\\t\\t\\tswitch self {\\n\\t\\t\\t\\tcase .numberIsNotOfSpecifiedType:\\n\\t\\t\\t\\t\\treturn \\\"Provided number is not a number of specified type.\\\"\\n\\t\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\t\\n\\tprivate func isNumber(_ number: String, type: NumberType) -> Bool {\\n\\t\\tvar digits = \\\"\\\"\\n\\t\\t\\n\\t\\tswitch type {\\n\\t\\t\\tcase .hexadecimal:\\n\\t\\t\\t\\tdigits = \\\"0123456789ABCDEF\\\"\\n\\t\\t\\tcase .binary:\\n\\t\\t\\t\\tdigits = \\\"01\\\"\\n\\t\\t\\tcase .decimal:\\n\\t\\t\\t\\tdigits = \\\"0123456789\\\"\\n\\t\\t}\\n\\t\\t\\n\\t\\tfor digit in number {\\n\\t\\t\\tif !digits.contains(digit) {\\n\\t\\t\\t\\treturn false\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\\t\\n\\t\\treturn true\\n\\t}\\n\\t\\n\\tprivate func toBinary(number: String, ofType type: NumberType) -> String {\\n\\t\\tswitch type {\\n\\t\\t\\tcase .hexadecimal:\\n\\t\\t\\t\\tvar result = \\\"\\\"\\n\\t\\t\\t\\t\\n\\t\\t\\t\\tfor digit in number {\\n\\t\\t\\t\\t\\tresult.append(hexadecimalDigitToBinaryNumber(digit: String(digit)))\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\n\\t\\t\\t\\treturn result\\n\\t\\t\\tcase .binary:\\n\\t\\t\\t\\treturn number\\n\\t\\t\\tcase .decimal:\\n\\t\\t\\t\\treturn String(Int(number)!, radix: 2)\\n\\t\\t}\\n\\t}\\n\\t\\n\\tprivate func toDecimal(number: String, ofType type: NumberType) -> String {\\n\\t\\tswitch type {\\n\\t\\t\\tcase .hexadecimal:\\n\\t\\t\\t\\treturn String(Int(toBinary(number: number, ofType: type), radix: 2)!)\\n\\t\\t\\tcase .binary:\\n\\t\\t\\t\\treturn String(Int(number, radix: 2)!)\\n\\t\\t\\tcase .decimal:\\n\\t\\t\\t\\treturn number\\n\\t\\t}\\n\\t}\\n\\t\\n\\tprivate func toHexadecimal(number: String, ofType type: NumberType) -> String {\\n\\t\\tswitch type {\\n\\t\\t\\tcase .hexadecimal:\\n\\t\\t\\t\\treturn number\\n\\t\\t\\tcase .binary:\\n\\t\\t\\t\\treturn String(fillMissingZerosForHexadecimalInBinary(string: number)).split(by: 4).map {\\n\\t\\t\\t\\t\\tbinaryNumberToHexadecimalDigit(digit: $0)\\n\\t\\t\\t\\t}.joined()\\n\\t\\t\\tcase .decimal:\\n\\t\\t\\t\\treturn String(fillMissingZerosForHexadecimalInBinary(string: String(Int(number)!, radix: 2))).split(by: 4).map {\\n\\t\\t\\t\\t\\tbinaryNumberToHexadecimalDigit(digit: $0)\\n\\t\\t\\t\\t}.joined()\\n\\t\\t}\\n\\t}\\n\\t\\n\\t\\/**\\n\\t Converts provided number to number of other type.\\n\\t \\n\\t - Parameter number: The number that will be converted.\\n\\t - Parameter ofType: The type of the number, which is going to be converted.\\n\\t - Parameter toType: The type to which number will be converted.\\n\\t \\n\\t - Returns: A hexadecimal number.\\n\\t *\\/\\n\\tfunc convert(number: String, ofType typeOfNumber: NumberType, toType resultType: NumberType) throws -> String {\\n\\t\\tif !isNumber(number, type: typeOfNumber) {\\n\\t\\t\\tthrow ConvertingError.numberIsNotOfSpecifiedType\\t\\t}\\n\\t\\t\\n\\t\\tswitch resultType {\\n\\t\\t\\tcase .hexadecimal:\\n\\t\\t\\t\\treturn toHexadecimal(number: number, ofType: typeOfNumber)\\n\\t\\t\\tcase .binary:\\n\\t\\t\\t\\treturn toBinary(number: number, ofType: typeOfNumber)\\n\\t\\t\\tcase .decimal:\\n\\t\\t\\t\\treturn toDecimal(number: number, ofType: typeOfNumber)\\n\\t\\t}\\n\\t}\\n\\n\\tprivate func fillMissingZerosForHexadecimalInBinary(string: String) -> String {\\n\\t\\tif string.count % 4 == 0 {\\n\\t\\t\\treturn string\\n\\t\\t} else {\\n\\t\\t\\tvar result = string\\n\\t\\t\\tvar count = string.count\\n\\t\\t\\t\\n\\t\\t\\twhile count % 4 != 0 {\\n\\t\\t\\t\\tresult = \\\"0\\\" + result\\n\\t\\t\\t\\tcount += 1\\n\\t\\t\\t}\\n\\t\\t\\t\\n\\t\\t\\treturn result\\n\\t\\t}\\n\\t}\\n\\t\\n\\tprivate func hexadecimalDigitToBinaryNumber(digit: String) -> String {\\n\\t\\tswitch digit {\\n\\t\\t\\tcase \\\"0\\\":\\n\\t\\t\\t\\treturn \\\"0000\\\"\\n\\t\\t\\tcase \\\"1\\\":\\n\\t\\t\\t\\treturn \\\"0001\\\"\\n\\t\\t\\tcase \\\"2\\\":\\n\\t\\t\\t\\treturn \\\"0010\\\"\\n\\t\\t\\tcase \\\"3\\\":\\n\\t\\t\\t\\treturn \\\"0011\\\"\\n\\t\\t\\tcase \\\"4\\\":\\n\\t\\t\\t\\treturn \\\"0100\\\"\\n\\t\\t\\tcase \\\"5\\\":\\n\\t\\t\\t\\treturn \\\"0101\\\"\\n\\t\\t\\tcase \\\"6\\\":\\n\\t\\t\\t\\treturn \\\"0110\\\"\\n\\t\\t\\tcase \\\"7\\\":\\n\\t\\t\\t\\treturn \\\"0111\\\"\\n\\t\\t\\tcase \\\"8\\\":\\n\\t\\t\\t\\treturn \\\"1000\\\"\\n\\t\\t\\tcase \\\"9\\\":\\n\\t\\t\\t\\treturn \\\"1001\\\"\\n\\t\\t\\tcase \\\"A\\\":\\n\\t\\t\\t\\treturn \\\"1010\\\"\\n\\t\\t\\tcase \\\"B\\\":\\n\\t\\t\\t\\treturn \\\"1011\\\"\\n\\t\\t\\tcase \\\"C\\\":\\n\\t\\t\\t\\treturn \\\"1100\\\"\\n\\t\\t\\tcase \\\"D\\\":\\n\\t\\t\\t\\treturn \\\"1101\\\"\\n\\t\\t\\tcase \\\"E\\\":\\n\\t\\t\\t\\treturn \\\"1110\\\"\\n\\t\\t\\tcase \\\"F\\\":\\n\\t\\t\\t\\treturn \\\"1111\\\"\\n\\t\\t\\tdefault:\\n\\t\\t\\t\\t\\/\\/ Impossible to reach.\\n\\t\\t\\t\\treturn \\\"Error: Invalid digit.\\\"\\n\\t\\t}\\n\\t}\\n\\t\\n\\tprivate func binaryNumberToHexadecimalDigit(digit: String) -> String {\\n\\t\\tswitch digit {\\n\\t\\t\\tcase \\\"0000\\\":\\n\\t\\t\\t\\treturn \\\"0\\\"\\n\\t\\t\\tcase \\\"0001\\\":\\n\\t\\t\\t\\treturn \\\"1\\\"\\n\\t\\t\\tcase \\\"0010\\\":\\n\\t\\t\\t\\treturn \\\"2\\\"\\n\\t\\t\\tcase \\\"0011\\\":\\n\\t\\t\\t\\treturn \\\"3\\\"\\n\\t\\t\\tcase \\\"0100\\\":\\n\\t\\t\\t\\treturn \\\"4\\\"\\n\\t\\t\\tcase \\\"0101\\\":\\n\\t\\t\\t\\treturn \\\"5\\\"\\n\\t\\t\\tcase \\\"0110\\\":\\n\\t\\t\\t\\treturn \\\"6\\\"\\n\\t\\t\\tcase \\\"0111\\\":\\n\\t\\t\\t\\treturn \\\"7\\\"\\n\\t\\t\\tcase \\\"1000\\\":\\n\\t\\t\\t\\treturn \\\"8\\\"\\n\\t\\t\\tcase \\\"1001\\\":\\n\\t\\t\\t\\treturn \\\"9\\\"\\n\\t\\t\\tcase \\\"1010\\\":\\n\\t\\t\\t\\treturn \\\"A\\\"\\n\\t\\t\\tcase \\\"1011\\\":\\n\\t\\t\\t\\treturn \\\"B\\\"\\n\\t\\t\\tcase \\\"1100\\\":\\n\\t\\t\\t\\treturn \\\"C\\\"\\n\\t\\t\\tcase \\\"1101\\\":\\n\\t\\t\\t\\treturn \\\"D\\\"\\n\\t\\t\\tcase \\\"1110\\\":\\n\\t\\t\\t\\treturn \\\"E\\\"\\n\\t\\t\\tcase \\\"1111\\\":\\n\\t\\t\\t\\treturn \\\"F\\\"\\n\\t\\t\\tdefault:\\n\\t\\t\\t\\t\\/\\/ Impossible to reach.\\n\\t\\t\\t\\treturn \\\"Error: Invalid digit.\\\"\\n\\t\\t}\\n\\t}\\n}\" , \"isHidden\" : false , \"creationDate\" : \"2022-06-19T15:11:21Z\" , \"id\" : \"7AE81089-EF1C-465F-9C39-25115DCED320\" , \"title\" : \"Number converter\" } ], \"metadata\" : { \"page\" : 1 , \"total\" : 3 , \"per\" : 20 } } }","title":"Example"},{"location":"users/about_user/","text":"Get user https://extiri.com/api/1/users/me Method: GET This endpoint will return information about user with specified session token. Parameters Headers Authorization header (required) - bearer authorization using session token, for example: Bearer 4FB7B11C-C8E6-487C-92D8-EFB0CCBAEA47 Success response id - id of user. name - name of user. email - email of user. Example Request: https://extiri.com/api/1/users/me Header Authorization: Bearer 4FB7B11C-C8E6-487C-92D8-EFB0CCBAEA4 Response: { \"id\" : \"AA2EE547-BBEB-45B6-89CA-4ABDF32E646E\" , \"name\" : \"Wiktor W\u00f3jcik\" , \"email\" : \"example@example.com\" }","title":"Get user"},{"location":"users/about_user/#get-user","text":"https://extiri.com/api/1/users/me Method: GET This endpoint will return information about user with specified session token.","title":"Get user"},{"location":"users/about_user/#parameters","text":"","title":"Parameters"},{"location":"users/about_user/#headers","text":"Authorization header (required) - bearer authorization using session token, for example: Bearer 4FB7B11C-C8E6-487C-92D8-EFB0CCBAEA47","title":"Headers"},{"location":"users/about_user/#success-response","text":"id - id of user. name - name of user. email - email of user.","title":"Success response"},{"location":"users/about_user/#example","text":"Request: https://extiri.com/api/1/users/me","title":"Example"},{"location":"users/about_user/#header","text":"Authorization: Bearer 4FB7B11C-C8E6-487C-92D8-EFB0CCBAEA4 Response: { \"id\" : \"AA2EE547-BBEB-45B6-89CA-4ABDF32E646E\" , \"name\" : \"Wiktor W\u00f3jcik\" , \"email\" : \"example@example.com\" }","title":"Header"},{"location":"users/delete_user/","text":"Delete user https://extiri.com/api/1/users/delete Method: DELETE This endpoint will delete specified user. The account will be deleted within 7 days. Account can be restored by logging in during this period. Parameters Headers Authorization header (required) - basic authorization using email and password concatenated using : and encoded using Base-64, for example: (not encoded) example@example.com:S@meVeryP0werfu1Passw0rd (encoded) ZXhhbXBsZUBleGFtcGxlLmNvbTpleGFtcGxlUGFzc3dvcmQ= Success response Ok Example Request: https://extiri.com/api/1/users/delete Header Authorization: Basic ZXhhbXBsZUBleGFtcGxlLmNvbTpleGFtcGxlUGFzc3dvcmQ= Response: Ok","title":"Delete user"},{"location":"users/delete_user/#delete-user","text":"https://extiri.com/api/1/users/delete Method: DELETE This endpoint will delete specified user. The account will be deleted within 7 days. Account can be restored by logging in during this period.","title":"Delete user"},{"location":"users/delete_user/#parameters","text":"","title":"Parameters"},{"location":"users/delete_user/#headers","text":"Authorization header (required) - basic authorization using email and password concatenated using : and encoded using Base-64, for example: (not encoded) example@example.com:S@meVeryP0werfu1Passw0rd (encoded) ZXhhbXBsZUBleGFtcGxlLmNvbTpleGFtcGxlUGFzc3dvcmQ=","title":"Headers"},{"location":"users/delete_user/#success-response","text":"Ok","title":"Success response"},{"location":"users/delete_user/#example","text":"Request: https://extiri.com/api/1/users/delete","title":"Example"},{"location":"users/delete_user/#header","text":"Authorization: Basic ZXhhbXBsZUBleGFtcGxlLmNvbTpleGFtcGxlUGFzc3dvcmQ= Response: Ok","title":"Header"},{"location":"users/get_user/","text":"Get user https://extiri.com/api/1/users/get/<user's id> Method: GET This endpoint will return user with specified id. Parameters user's id (required) - id of user, for example: C05D571B-E7F0-486D-98C9-7EF369F43CB7 Success response id - id of user. name - string containing name of user. Example Request: https://extiri.com/api/1/users/get/0538C682-8D6D-4998-9990-7A7AD7BD5E13 Response: { \"id\" : \"0538C682-8D6D-4998-9990-7A7AD7BD5E13\" , \"name\" : \"Wiktor W\u00f3jcik\" }","title":"Get user"},{"location":"users/get_user/#get-user","text":"https://extiri.com/api/1/users/get/<user's id> Method: GET This endpoint will return user with specified id.","title":"Get user"},{"location":"users/get_user/#parameters","text":"user's id (required) - id of user, for example: C05D571B-E7F0-486D-98C9-7EF369F43CB7","title":"Parameters"},{"location":"users/get_user/#success-response","text":"id - id of user. name - string containing name of user.","title":"Success response"},{"location":"users/get_user/#example","text":"Request: https://extiri.com/api/1/users/get/0538C682-8D6D-4998-9990-7A7AD7BD5E13 Response: { \"id\" : \"0538C682-8D6D-4998-9990-7A7AD7BD5E13\" , \"name\" : \"Wiktor W\u00f3jcik\" }","title":"Example"},{"location":"users/login_user/","text":"Login user https://extiri.com/api/1/users/login Method: POST This endpoint will delete specified user. The account will be deleted within 7 days. Account can be restored by logging in during this period. Parameters Headers Authorization header (required) - basic authorization using email and password concatenated using : and encoded using Base-64, for example: (not encoded) example@example.com:S@meVeryP0werfu1Passw0rd (encoded) ZXhhbXBsZUBleGFtcGxlLmNvbTpleGFtcGxlUGFzc3dvcmQ= Success response token - string containing session token. Example Request: https://extiri.com/api/1/users/login Header Authorization: Basic ZXhhbXBsZUBleGFtcGxlLmNvbTpleGFtcGxlUGFzc3dvcmQ= Response: { \"token\" : \"C05D571B-E7F0-486D-98C9-7EF369F43CB7\" }","title":"Login user"},{"location":"users/login_user/#login-user","text":"https://extiri.com/api/1/users/login Method: POST This endpoint will delete specified user. The account will be deleted within 7 days. Account can be restored by logging in during this period.","title":"Login user"},{"location":"users/login_user/#parameters","text":"","title":"Parameters"},{"location":"users/login_user/#headers","text":"Authorization header (required) - basic authorization using email and password concatenated using : and encoded using Base-64, for example: (not encoded) example@example.com:S@meVeryP0werfu1Passw0rd (encoded) ZXhhbXBsZUBleGFtcGxlLmNvbTpleGFtcGxlUGFzc3dvcmQ=","title":"Headers"},{"location":"users/login_user/#success-response","text":"token - string containing session token.","title":"Success response"},{"location":"users/login_user/#example","text":"Request: https://extiri.com/api/1/users/login","title":"Example"},{"location":"users/login_user/#header","text":"Authorization: Basic ZXhhbXBsZUBleGFtcGxlLmNvbTpleGFtcGxlUGFzc3dvcmQ= Response: { \"token\" : \"C05D571B-E7F0-486D-98C9-7EF369F43CB7\" }","title":"Header"},{"location":"users/logout_user/","text":"Logout user https://extiri.com/api/1/users/logout Method: GET This endpoint will delete specified user. The account will be deleted within 7 days. Account can be restored by logging in during this period. Parameters Headers Authorization header (required) - bearer authorization using session token, for example: Bearer 4FB7B11C-C8E6-487C-92D8-EFB0CCBAEA47 Success response Ok Example Request: https://extiri.com/api/1/users/logout Header Authorization: Bearer 4FB7B11C-C8E6-487C-92D8-EFB0CCBAEA4 Response: OK","title":"Logout user"},{"location":"users/logout_user/#logout-user","text":"https://extiri.com/api/1/users/logout Method: GET This endpoint will delete specified user. The account will be deleted within 7 days. Account can be restored by logging in during this period.","title":"Logout user"},{"location":"users/logout_user/#parameters","text":"","title":"Parameters"},{"location":"users/logout_user/#headers","text":"Authorization header (required) - bearer authorization using session token, for example: Bearer 4FB7B11C-C8E6-487C-92D8-EFB0CCBAEA47","title":"Headers"},{"location":"users/logout_user/#success-response","text":"Ok","title":"Success response"},{"location":"users/logout_user/#example","text":"Request: https://extiri.com/api/1/users/logout","title":"Example"},{"location":"users/logout_user/#header","text":"Authorization: Bearer 4FB7B11C-C8E6-487C-92D8-EFB0CCBAEA4 Response: OK","title":"Header"},{"location":"users/signup_user/","text":"Signup user https://extiri.com/api/1/users/signup Method: POST This endpoint will create account. The ser will receive email in which there is confirmation link. If the user doesn't confirm account within 24 hours, it will be deleted. Parameters Body name - name of user. email - email of user. password - password of user. It must be at least 8 characters long, contain at least 1 lowercase character, 1 uppercase character, 1 digit and must not be equal to either user's email or username. Success response Account has been succesfully registered. You will need to confirm it using link in e-mail sent to you. If you don't see it, check Spam folder. Example Request: https://extiri.com/api/1/users/signup Body { \"name\" : \"Wiktor W\u00f3jcik\" , \"email\" : \"example@example.com\" , \"password\" : \"S@meVeryP0werfu1Passw0rd\" } Response: Account has been succesfully registered. You will need to confirm it using link in e-mail sent to you. If you don't see it, check Spam folder.","title":"Signup user"},{"location":"users/signup_user/#signup-user","text":"https://extiri.com/api/1/users/signup Method: POST This endpoint will create account. The ser will receive email in which there is confirmation link. If the user doesn't confirm account within 24 hours, it will be deleted.","title":"Signup user"},{"location":"users/signup_user/#parameters","text":"","title":"Parameters"},{"location":"users/signup_user/#body","text":"name - name of user. email - email of user. password - password of user. It must be at least 8 characters long, contain at least 1 lowercase character, 1 uppercase character, 1 digit and must not be equal to either user's email or username.","title":"Body"},{"location":"users/signup_user/#success-response","text":"Account has been succesfully registered. You will need to confirm it using link in e-mail sent to you. If you don't see it, check Spam folder.","title":"Success response"},{"location":"users/signup_user/#example","text":"Request: https://extiri.com/api/1/users/signup","title":"Example"},{"location":"users/signup_user/#body_1","text":"{ \"name\" : \"Wiktor W\u00f3jcik\" , \"email\" : \"example@example.com\" , \"password\" : \"S@meVeryP0werfu1Passw0rd\" } Response: Account has been succesfully registered. You will need to confirm it using link in e-mail sent to you. If you don't see it, check Spam folder.","title":"Body"},{"location":"users/valid/","text":"Is token valid https://extiri.com/api/1/users/valid/<token> Method: GET This endpoint will return success HTTP response (200) if token is valid and unathorized HTTP response, if token is invalid (it doesn't exist or it expired). Parameters token (required) - token, for example: C05D571B-E7F0-486D-98C9-7EF369F43CB7 Success response Ok Example Request: https://extiri.com/api/1/users/valid/0538C682-8D6D-4998-9990-7A7AD7BD5E13 Response: Ok","title":"Is token valid"},{"location":"users/valid/#is-token-valid","text":"https://extiri.com/api/1/users/valid/<token> Method: GET This endpoint will return success HTTP response (200) if token is valid and unathorized HTTP response, if token is invalid (it doesn't exist or it expired).","title":"Is token valid"},{"location":"users/valid/#parameters","text":"token (required) - token, for example: C05D571B-E7F0-486D-98C9-7EF369F43CB7","title":"Parameters"},{"location":"users/valid/#success-response","text":"Ok","title":"Success response"},{"location":"users/valid/#example","text":"Request: https://extiri.com/api/1/users/valid/0538C682-8D6D-4998-9990-7A7AD7BD5E13 Response: Ok","title":"Example"}]}